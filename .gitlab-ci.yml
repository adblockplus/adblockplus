# This file is part of Adblock Plus <https://adblockplus.org/>,
# Copyright (C) 2006-present eyeo GmbH
#
# Adblock Plus is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# Adblock Plus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.

---

default:
  image: node:16.15.0
  before_script:
    # enable unsafe-perm to avoid problems with running npm as root
    # see https://gitlab.com/eyeo/adblockplus/abpui/adblockplusui/-/issues/193
    - export npm_config_unsafe_perm=true

stages:
  - lint
  - test
  - build
  - checkfilesizes
  - testpages
  - uploadxtm
  - updatextm
  - downloadxtm
  - uploadcrowdin
  - downloadcrowdin

################################################################################
# Test
################################################################################

lint:
  stage: lint
  script:
    # Update dependencies
    - npm run submodules:update
    - git submodule status
    - npm install
    # Run linter
    - npm run lint

test:
  stage: test
  script:
    # Update dependencies
    - npm run submodules:update
    - git submodule status
    - npm install
    # Run tests
    - npm run test

################################################################################
# Build
################################################################################

build:
  stage: build
  script:
    # Update git version to fix problems with ls-files command
    # https://gitlab.com/eyeo/adblockplus/abpui/adblockplusui/-/issues/1040
    - echo "deb http://deb.debian.org/debian stretch-backports main" > /etc/apt/sources.list.d/stretch-backports.list
    - apt-get update
    - apt-get -t stretch-backports install -y git
    # Update dependencies
    - npm run submodules:update
    - git submodule status
    - npm install
    # Create extension builds
    - cd adblockpluschrome
    - npx gulp build -t chrome --unhandled-rejections=strict
    - npx gulp build -t firefox --unhandled-rejections=strict
    - npx gulp source
    # Attach commit hash to build files
    - mv adblockpluschrome-*.zip adblockplus-chrome-${CI_COMMIT_SHORT_SHA}.zip
    - mv adblockplusfirefox-*.xpi adblockplus-firefox-${CI_COMMIT_SHORT_SHA}.xpi
    - mv adblockplus-*.tar.gz adblockplus-${CI_COMMIT_SHORT_SHA}.tar.gz
    # Create Manifest v3 extension builds
    - npx gulp build -t chrome -m 3 --unhandled-rejections=strict
    - npx gulp build -t firefox -m 3 --unhandled-rejections=strict
    # Attach commit hash to build files
    - mv adblockpluschrome-*.zip adblockplus-chrome-${CI_COMMIT_SHORT_SHA}-mv3.zip
    - mv adblockplusfirefox-*.xpi adblockplus-firefox-${CI_COMMIT_SHORT_SHA}-mv3.xpi
  artifacts:
    name: "adblockplus-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - adblockpluschrome/adblockplus-${CI_COMMIT_SHORT_SHA}.tar.gz
      - adblockpluschrome/adblockplus-chrome-${CI_COMMIT_SHORT_SHA}.zip
      - adblockpluschrome/adblockplus-chrome-${CI_COMMIT_SHORT_SHA}-mv3.zip
      - adblockpluschrome/adblockplus-firefox-${CI_COMMIT_SHORT_SHA}.xpi
      - adblockpluschrome/adblockplus-firefox-${CI_COMMIT_SHORT_SHA}-mv3.xpi

# ################################################################################
# # Check filesizes
# ################################################################################

.checkfilesizes:
  image: alpine:latest
  stage: checkfilesizes
  script:
   - unzip -d unpacked-extension/ adblockpluschrome/$EXTENSION
   - cd unpacked-extension/
   - if [ $(find . -type f -name '*.js' -size +4000k | wc -l) -gt 0 ]; then
       echo 'Some extension files are bigger than 4 MB:' &&
       find . -type f -name '*.js' -size +4000k -exec ls -lh {} \; &&
       exit 1;
     else
       echo 'All extension files are smaller than 4 MB' &&
       exit 0;
     fi

checkfilesizes:MV3:chrome:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblockplus-chrome-${CI_COMMIT_SHORT_SHA}-mv3.zip

checkfilesizes:MV2:chrome:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblockplus-chrome-${CI_COMMIT_SHORT_SHA}.zip


checkfilesizes:MV2:firefox:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblockplus-firefox-${CI_COMMIT_SHORT_SHA}.xpi

################################################################################
# Translate
################################################################################

.translations:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature-/
      when: manual
    - if: $CI_COMMIT_BRANCH == "release"
      when: manual

.crowdin:
  variables:
    CROWDIN_TOKEN: $CROWDIN_TOKEN
    CROWDIN_PROJECT_ID: $CROWDIN_PROJECT_ID
  environment:
    name: crowdin
    url: https://crowdin.com/project/adblockplusui

uploadcrowdin:
  stage: uploadcrowdin
  extends:
    - .crowdin
    - .translations
  script:
    - npm install
    # installing java
    - apt-get install openjdk-11-jre -yqq
    # installing crowdin-cli
    - wget https://artifacts.crowdin.com/repo/deb/crowdin3.deb -O crowdin.deb
    - dpkg -i crowdin.deb
    - crowdin --version
    # Uploading strings
    - npm run $ crowdin.upload-strings
    - npm run $ crowdin.upload-translations

downloadcrowdin:
  stage: downloadcrowdin
  extends:
    - .crowdin
    - .translations
  script:
    - npm install
    # installing java
    - apt-get install openjdk-11-jre -yqq
    # installing crowdin-cli
    - wget https://artifacts.crowdin.com/repo/deb/crowdin3.deb -O crowdin.deb
    - dpkg -i crowdin.deb
    - crowdin --version
    # Download strings
    - npm run $ crowdin.download-translations
    # Test translations
    - npm run $ lint.locale
    # Configure author for commit
    - git config user.email "$GITLAB_USER_EMAIL"
    - git config user.name "$GITLAB_USER_NAME"
    # Add changes and commit
    - git add locale
    - export COMMIT_MSG="Noissue - Downloaded Crowdin translations for $CI_BUILD_REF_NAME"
    - git commit -m "$COMMIT_MSG"
    # Push into new branch and create a new merge request
    - export TARGET_BRANCH="translation-${CI_BUILD_REF_NAME}-crowdin-download"
    - export PUSH_URL=$(echo $CI_PROJECT_URL | sed "s/:\/\//:\/\/$GITLAB_USER:$GITLAB_TOKEN@/")
    - 'git push -f -o merge_request.create -o merge_request.target=$CI_BUILD_REF_NAME -o merge_request.remove_source_branch -o merge_request.title="WIP: ${COMMIT_MSG}" $PUSH_URL HEAD:refs/heads/$TARGET_BRANCH'

.xtm:
  variables:
    USER_ID: $XTM_USER_ID
    CLIENT: $XTM_CLIENT
    PASSWORD: $XTM_PASSWORD
  environment:
    name: xtm/$CI_COMMIT_REF_SLUG
    url: https://www.xtm-cloud.com

uploadxtm:
  stage: uploadxtm
  extends:
    - .xtm
    - .translations
  script:
    - npm install
    # Currently the xtm script determines the branch name using git rev-parse
    # which doesn't work inside the CI environment because it's using a detached
    # head (see https://gitlab.com/gitlab-org/gitlab-ce/issues/19421) to make
    # it work we need to created the corresponding branches
    - git branch master origin/master
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - npm run $ xtm.create

updatextm:
  stage: updatextm
  extends:
    - .xtm
    - .translations
  script:
    - npm install
    # Currently the xtm script determines the branch name using git rev-parse
    # which doesn't work inside the CI environment because it's using a detached
    # head (see https://gitlab.com/gitlab-org/gitlab-ce/issues/19421) to make
    # it work we need to created the corresponding branches
    - git branch master origin/master
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - npm run $ xtm.update

downloadxtm:
  stage: downloadxtm
  extends:
    - .xtm
    - .translations
  script:
    - npm install
    # Currently the xtm script determines the branch name using git rev-parse
    # which doesn't work inside the CI environment because it's using a detached
    # head (see https://gitlab.com/gitlab-org/gitlab-ce/issues/19421) to make
    # it work we need to created the corresponding branches
    - git branch master origin/master
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    # Download the translations
    - npm run $ xtm.download
    # Test translations
    - npm run $ lint.locale
    # Configure author for commit
    - git config user.email "$GITLAB_USER_EMAIL"
    - git config user.name "$GITLAB_USER_NAME"
    # Add changes and commit
    - git add locale
    - export COMMIT_MSG="Noissue - Downloaded XTM translations for $CI_BUILD_REF_NAME"
    - git commit -m "$COMMIT_MSG"
    # Push into new branch and create a new merge request
    - export TARGET_BRANCH="translation-${CI_BUILD_REF_NAME}-xtm-download"
    - export PUSH_URL=$(echo $CI_PROJECT_URL | sed "s/:\/\//:\/\/$GITLAB_USER:$GITLAB_TOKEN@/")
    - 'git push -f -o merge_request.create -o merge_request.target=$CI_BUILD_REF_NAME -o merge_request.remove_source_branch -o merge_request.title="WIP: ${COMMIT_MSG}" $PUSH_URL HEAD:refs/heads/$TARGET_BRANCH'

################################################################################
# Ad filtering tests
################################################################################

.testpages:
  stage: testpages
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  variables:
    DOCKER_DRIVER: overlay2
  interruptible: true
  before_script:
    - apk add git
    # Clone the latest master branch of the testpages project
    - git clone https://gitlab.com/eyeo/adblockplus/abc/testpages.adblockplus.org.git
    - cp adblockpluschrome/$EXTENSION testpages.adblockplus.org
  script:
    - cd testpages.adblockplus.org &&
      docker build -t testpages --build-arg EXTENSION_FILE=$EXTENSION . &&
      docker run --shm-size=256m -e SKIP_EXTENSION_DOWNLOAD="true" -e GREP="$PARAMETERS" testpages
  after_script:
    - docker cp $(docker ps -aqf ancestor=testpages):/testpages.adblockplus.org/test/screenshots .
      2> /dev/null
  artifacts:
    paths:
      - screenshots/
    when: always
    expire_in: 1 month
  rules:
    # Do not trigger a merge request pipeline
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    # Run automatically on release and master branch
    - if: $CI_COMMIT_BRANCH == "release" || $CI_COMMIT_BRANCH == "master"
      allow_failure: true
    # Run manually on all other branches
    - when: manual
      allow_failure: true

testpages:MV3:chrome:latest:
  extends: .testpages
  variables:
    BROWSER: chromium latest
    EXTENSION: adblockplus-chrome-${CI_COMMIT_SHORT_SHA}-mv3.zip
    SKIP: Subscriptions|Header
    PARAMETERS: '^.*$BROWSER((?!$SKIP).)*$'

testpages:MV2:chrome:latest:
  extends: .testpages
  variables:
    BROWSER: chromium latest
    EXTENSION: adblockplus-chrome-${CI_COMMIT_SHORT_SHA}.zip
    PARAMETERS: $BROWSER

testpages:MV2:chrome:oldest:
  extends: .testpages
  variables:
    BROWSER: chromium 77.0.3865.0
    EXTENSION: adblockplus-chrome-${CI_COMMIT_SHORT_SHA}.zip
    PARAMETERS: $BROWSER

testpages:MV2:firefox:latest:
  extends: .testpages
  variables:
    BROWSER: firefox latest
    EXTENSION: adblockplus-firefox-${CI_COMMIT_SHORT_SHA}.xpi
    PARAMETERS: $BROWSER

testpages:MV2:firefox:oldest:
  extends: .testpages
  variables:
    BROWSER: firefox 68.0
    EXTENSION: adblockplus-firefox-${CI_COMMIT_SHORT_SHA}.xpi
    PARAMETERS: $BROWSER